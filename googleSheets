function onOpen() {
  /*
  onOpen runs when the sheet is opened or refreshed without needing to set a trigger.
  Adds a menu to easily run scripts directly from the UI.
  */
  SpreadsheetApp.getUi().createMenu('menuName') 
    .addItem('Menu item 1', 'functionToCall') //note: variables cannot be passed into functions when called from the menu.
    .addItem('Menu item 2', 'anotherFunction')
    .addToUi();
}

function url2Id(url) {
  //Converts a url string in a Google Forms response sheet into the Google ID for that file.
  const id = url.split('id=')[1];
  console.info(url, id);
  return id;
}

function getPermissionSlips(folderIdString) {
  //gets authorized users for a folder in Google Drive
  const programFolder = DriveApp.getFolderById(folderIdString);
  const permissionSlips = [];
  programFolder.getViewers().forEach(function (viewer) {
    permissionSlips.push(viewer.getEmail());
  });
  console.info(permissionSlips);
  return(permissionSlips);
}

function titleCase(str) {
  //Capitalizes each word in a string. Great for making submitted names consistent.
  str = str.trim();
  return str.toString().split(/\b/).map(function (word) {
    return word ? word.charAt(0).toUpperCase() + word.slice(1).toLowerCase() : '';
  }).join('');
}

function getStates() {
  //Returns an array of all US state abbreviations.
  let states = new Array;
  states = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY']
  return states;
}

function createUserSheet() {
  //create a copy of a template sheet for user by name if it doesn't exist, then go to it. Set this to trigger on open.
  const userName = Session.getActiveUser().getEmail().split('@')[0].charAt(0).toUpperCase() + Session.getActiveUser().getEmail().split('@')[0].slice(1);
  const ss = SpreadsheetApp.getActive();
  let createNew = true;
  let allSheets = ss.getSheets();
  allSheets.forEach(function (sheet) {
    if (sheet.getName() == userName) {
      createNew = false;
    }
  });
  if (createNew == true) {
    ss.getSheetByName('nameOfTemplateSheet').copyTo(ss).setName(userName);
  }
  ss.getSheetByName(userName).activate();
}
